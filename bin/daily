#! /app/.heroku/node/bin/node

require('dotenv').config();
const exec = require('child_process').exec
var fs = require('fs');

fs.writeFile(".rmapi", "devicetoken: " + process.env.devicetoken + "\n" +
    "usertoken: " + process.env.usertoken, function(err) {

    if(err) {
        return console.log(err);
    }

    console.log("Saved config file");
});

function os_func() {


        this.execCommand = function(cmd, callback) {
            exec(cmd, (error, stdout, stderr) => {
                if (error) {
                console.error(`exec error: ${error}`);
                return;
                 }
        callback(stdout);
        });
    }
}
var os = new os_func();

//Publications

//WSJ
const WSJ_file = "_wsj-today_";
const WSJ_recipe = "The Wall Street Journal.recipe";

//Seattle Times
const seattle_times_file = "_seattle-times_";
const seattle_times_recipe = "The Seattle Times.recipe";

function get_file(pub){
    if(pub === "WSJ") return WSJ_file;
    if(pub === "ST") return seattle_times_file;
}

function get_recipe(pub){
    if(pub === "WSJ") return WSJ_recipe;
    if(pub === "ST") return seattle_times_recipe;
}

function get_username(pub){
    if(pub === "WSJ") return `${process.env.wsj_username}`;
    if(pub === "ST") return "";
}

function get_password(pub){
    if(pub === "WSJ") return `${process.env.wsj_password}`;
    if(pub === "ST") return "";
}

function download_epub(pub, callback){
        os.execCommand(`ebook-convert "${get_recipe(pub)}" ./pdfs/${get_file(pub)}.epub  --output-profile tablet --username ${get_username(pub)} --password ${get_password(pub)}`, function (returnvalue) {
                if(returnvalue.includes(`exec error`)){
                    console.log(`Initial ${pub} epub download failed, trying again`);
                    download_epub(pub);
                }
                else{
                    callback(`./pdfs/${get_file(pub)}.epub`);
                }
        });
}

function daily(pub) {
    //Generate master epub'
    download_epub(pub, function(epub_filename){
        console.log(`Generated master ${pub} epub`);

        //Remove old edition, then send to rM
        os.execCommand(`./rmapi find .`, function (returnvalue) {
            if (returnvalue.includes(`${get_file(pub)}`)){

                //Remove old edition
                os.execCommand(`./rmapi rm ${get_file(pub)}`, function (returnvalue) {
                    console.log(`Removed old ${pub} edition`);
                         //Send to rM
                         os.execCommand(`./rmapi put ${epub_filename}`, function (returnvalue) {
                             console.log(`Sent ${pub} epub to rM`);
                         });
                 });
             }

             //Send to rM
             else{
                 os.execCommand(`./rmapi put ${epub_filename}`, function (returnvalue) {
                     console.log(`Sent ${pub} epub to rM`);
                 });
             }
        });

        //Generate WSJ mobi
        os.execCommand(`ebook-convert ./pdfs/${get_file(pub)}.epub ./pdfs/${get_file(pub)}.mobi --output-profile kindle_pw3 --mobi-file-type both`, function (returnvalue) {
            console.log(`Generated ${pub} mobi`);

            //Email mobi to Kindle
            os.execCommand(`calibre-smtp --attachment ./pdfs/${get_file(pub)}.mobi --relay smtp.live.com --port 587 --username ${process.env.HOTMAIL_USERNAME} --password ${process.env.HOTMAIL_PASSWORD} ${process.env.HOTMAIL_USERNAME} ${process.env.KINDLE_EMAIL} ""`, function (returnvalue) {
            console.log(`Emailed ${pub} mobi to Kindle`);
            });
        });
    });
}
daily("WSJ");
daily("ST");